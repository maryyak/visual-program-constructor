const express = require("express");
const { UserDisciplines, Discipline } = require("../models");
const { authMiddleware } = require("../routes/users");
const router = express.Router();

// üìå –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω, –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã—Ö –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
router.get("/", authMiddleware, async (req, res) => {
    try {
        const userDisciplines = await UserDisciplines.findAll({
            where: { userId: req.user.id },
            include: [{ model: Discipline }],
        });

        res.json(userDisciplines.map(entry => entry.Discipline));
    } catch (error) {
        res.status(500).json({ error: error.message });
    }
});

// üìå –ü—Ä–∏–≤—è–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–µ
router.post("/:disciplineId", authMiddleware, async (req, res) => {
    try {
        const { disciplineId } = req.params;

        const existingEntry = await UserDisciplines.findOne({
            where: { userId: req.user.id, disciplineId }
        });

        if (existingEntry) {
            return res.status(400).json({ error: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ —ç—Ç–æ–π –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–µ" });
        }
        const newEntry = await UserDisciplines.create({ userId: req.user.id, disciplineId });

        res.status(201).json(newEntry);
    } catch (error) {
        res.status(500).json({ error: error.message });
    }
});

// üìå –û—Ç–≤—è–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã
router.delete("/:disciplineId", authMiddleware, async (req, res) => {
    try {
        const { disciplineId } = req.params;

        const deleted = await UserDisciplines.destroy({
            where: { userId: req.user.id, disciplineId }
        });

        if (!deleted) {
            return res.status(404).json({ error: "–ü—Ä–∏–≤—è–∑–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞" });
        }

        res.json({ message: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–≤—è–∑–∞–Ω –æ—Ç –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã" });
    } catch (error) {
        res.status(500).json({ error: error.message });
    }
});

module.exports = router;
