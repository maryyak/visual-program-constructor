const express = require("express");
const { UserStudyplans, Studyplan } = require("../models");
const { authMiddleware } = require("../routes/users");
const router = express.Router();

// üìå –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —É—á–µ–±–Ω—ã—Ö –ø–ª–∞–Ω–æ–≤, –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã—Ö –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
router.get("/", authMiddleware, async (req, res) => {
    try {
        const userStudyplans = await UserStudyplans.findAll({
            where: { userId: req.user.id },
            include: [{ model: Studyplan }],
        });

        res.json(userStudyplans.map(entry => entry.Studyplan));
    } catch (error) {
        res.status(500).json({ error: error.message });
    }
});

// üìå –ü—Ä–∏–≤—è–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ —É—á–µ–±–Ω–æ–º—É –ø–ª–∞–Ω—É
router.post("/:studyplanId", authMiddleware, async (req, res) => {
    try {
        const { studyplanId } = req.params;

        const existingEntry = await UserStudyplans.findOne({
            where: { userId: req.user.id, studyplanId }
        });

        if (existingEntry) {
            return res.status(400).json({ error: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ —ç—Ç–æ–º—É —É—á–µ–±–Ω–æ–º—É –ø–ª–∞–Ω—É" });
        }

        const newEntry = await UserStudyplans.create({ userId: req.user.id, studyplanId });

        res.status(201).json(newEntry);
    } catch (error) {
        res.status(500).json({ error: error.message });
    }
});

// üìå –û—Ç–≤—è–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç —É—á–µ–±–Ω–æ–≥–æ –ø–ª–∞–Ω–∞
router.delete("/:studyplanId", authMiddleware, async (req, res) => {
    try {
        const { studyplanId } = req.params;

        const deleted = await UserStudyplans.destroy({
            where: { userId: req.user.id, studyplanId }
        });

        if (!deleted) {
            return res.status(404).json({ error: "–ü—Ä–∏–≤—è–∑–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞" });
        }

        res.json({ message: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–≤—è–∑–∞–Ω –æ—Ç —É—á–µ–±–Ω–æ–≥–æ –ø–ª–∞–Ω–∞" });
    } catch (error) {
        res.status(500).json({ error: error.message });
    }
});

module.exports = router;
